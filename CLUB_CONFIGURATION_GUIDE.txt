CLUB CONFIGURATION GUIDE - SECURE USER MAPPING
==============================================

⚠️  IMPORTANT: You need to configure the actual club owner UIDs to make this work properly.

WHAT YOU NEED TO DO:
====================

1. FIND YOUR CLUB OWNER UIDs:
   - Log into Firebase Console: https://console.firebase.google.com/
   - Go to your project: toastmasters-monthly-schedule
   - Navigate to Firestore Database
   - Look at the 'users' collection
   - Find documents that have an 'organization' field
   - Copy the document ID (this is the club owner UID)

2. UPDATE THE MAPPING IN ToastmastersContext.tsx:
   
   FIND THESE TWO SECTIONS and replace the placeholder UIDs:

   Section 1 (around line 366):
   ```
   const legitimateUserClubMapping: { [userIdentifier: string]: string } = {
       // Replace YOUR_CLUB_1_OWNER_UID with actual UID
       'jeannebrks@gmail.com': 'YOUR_CLUB_1_OWNER_UID',
       'rey.reynolds@usdigital.com': 'YOUR_CLUB_1_OWNER_UID',
       // ... etc
   ```

   Section 2 (around line 231):
   ```
   const legitimateUserMapping: { [userIdentifier: string]: { name: string; role: UserRole; clubOwner: string } } = {
       // Replace YOUR_CLUB_1_OWNER_UID with actual UID
       'jeannebrks@gmail.com': { name: 'Jeanne Brks', role: UserRole.Member, clubOwner: 'YOUR_CLUB_1_OWNER_UID' },
       // ... etc
   ```

3. EXAMPLE CONFIGURATION:
   
   If your Firebase shows:
   - Club 1 owner UID: 'abc123def456' 
   - Club 2 owner UID: 'xyz789uvw012'
   
   Update like this:
   ```
   'user1@email.com': 'abc123def456',  // Club 1 member
   'user2@email.com': 'abc123def456',  // Club 1 member  
   'user3@email.com': 'xyz789uvw012',  // Club 2 member
   ```

4. ADD/REMOVE USERS:
   - Add legitimate users with their correct club owner UID
   - Remove users who should no longer have access
   - Make sure each user is mapped to the CORRECT club

SECURITY BENEFITS:
==================

✅ Each user can ONLY access their designated club
✅ No cross-club data exposure
✅ Users not in the mapping are denied access
✅ Club isolation is maintained
✅ New users still require proper invitations

HOW TO FIND CLUB OWNER UIDs:
============================

Method 1 - Firebase Console:
1. Go to Firebase Console
2. Select your project
3. Go to Firestore Database
4. Look at 'users' collection
5. Find documents with 'organization' field
6. The document ID is the club owner UID

Method 2 - Check existing users:
1. Look at the existing member assignments in your clubs
2. The club admin/owner UID should be visible in the data

TESTING:
========

After updating the UIDs:
1. Test each user can access their correct club only
2. Verify no cross-club data access
3. Check that unauthorized users get proper error messages

MIGRATION TO PROPER INVITATIONS:
===============================

This mapping is TEMPORARY. The proper long-term solution is:
1. Use the invitation system for all new users
2. Gradually migrate existing users to proper invitation system
3. Eventually remove this hardcoded mapping

The invitation system creates proper "user pointer documents" that 
eliminate the need for hardcoded mappings.

EXAMPLE COMPLETE CONFIGURATION:
==============================

Based on your actual Firebase UIDs (replace with real ones):

```javascript
const legitimateUserClubMapping = {
    // Club 3091 members  
    'jeannebrks@gmail.com': 'oFRCL1i4s3eROfoun1QeDV5t7Hu2',
    'rey.reynolds@usdigital.com': 'oFRCL1i4s3eROfoun1QeDV5t7Hu2', 
    'plocke48@gmail.com': 'oFRCL1i4s3eROfoun1QeDV5t7Hu2',
    
    // Club 1234 members (if you have a second club)
    'user2@club2.com': 'differentClubOwnerUID123',
    
    // Admin
    'isaiah.fedur@synkwise.com': 'oFRCL1i4s3eROfoun1QeDV5t7Hu2',
};
```

Remember: Each group of users should have the SAME club owner UID 
if they belong to the same club!
