rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuthenticated() { return request.auth != null; }
    function getUserId() { return request.auth.uid; }

    // Checks if the requesting user is the owner of the club.
    function isClubOwner(ownerId) {
      return isAuthenticated() && getUserId() == ownerId;
    }

    // Checks if the requesting user is an admin (simplified - can be enhanced)
    function isAdmin() {
      return isAuthenticated();
    }

    // --- User Profile (Club Data or Pointer Doc) ---
    match /users/{userId} {
      // READ: Allow any authenticated user to read any user document
      allow get: if isAuthenticated();

      // LIST: Allow authenticated users to list users (needed for club discovery)
      allow list: if isAuthenticated();

      // CREATE: DISABLED - No user documents should be created for members
      // Only allow club owners to create their club document explicitly
      allow create: if false;
      
      // DELETE: Only the club owner can delete the main club document.
      allow delete: if isClubOwner(userId);

      // UPDATE: Allow any authenticated user to update (app logic will handle permissions)
      allow update: if isAuthenticated();
    }

    // --- Invitations Collection (token-based) ---
    match /invitations/{inviteId} {
      // Anyone can read invitations (needed for join process)
      allow get: if true;

      // Allow authenticated users to list, create, update, delete invitations
      allow list, create, update, delete: if isAuthenticated();
    }

    // --- Public Schedules Collection ---
    match /publicSchedules/{docId} {
      // Anyone can read public schedules
      allow get, list: if true;
      
      // Allow authenticated users to create/update/delete (will be filtered by app logic)
      allow create, update, delete: if isAuthenticated();
    }

    // --- Public Agendas Collection ---
    match /publicAgendas/{docId} {
      // Anyone can read public agendas
      allow get, list: if true;
      
      // Allow authenticated users to create/update/delete (will be filtered by app logic)
      allow create, update, delete: if isAuthenticated();
    }

    // --- Email Trigger Extension Collection ---
    match /mail/{docId} {
      allow create: if isAuthenticated();
      allow read, update, delete: if false; // Only the extension can process the queue.
    }

    // --- Notifications Collection ---
    match /notifications/{notificationId} {
      // Users can read individual notifications if they own them
      allow get: if isAuthenticated() && resource.data.userId == getUserId();
      
      // Users can list their own notifications
      allow list: if isAuthenticated() && request.auth.uid != null;
      
      // Allow authenticated users to create notifications
      allow create: if isAuthenticated();
      
      // Users can mark their own notifications as read or dismissed
      allow update: if isAuthenticated() && 
        resource.data.userId == getUserId() &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isRead', 'readAt', 'isDismissed', 'dismissedAt']);
      
      // Users can delete their own notifications
      allow delete: if isAuthenticated() && resource.data.userId == getUserId();
    }

    // --- Mail Collection (Firebase Extension) ---
    match /mail/{emailId} {
      // Only authenticated admin users can create email requests
      allow create: if isAuthenticated() && isAdmin();
      
      // The Firebase Extension will handle reading and processing
      allow read, update, delete: if false;
    }

    // --- Organizations Collection (Club Data) ---
    match /organizations/{orgId} {
      // Allow authenticated users to read/write their own organization data
      allow read, write: if isAuthenticated();

      // --- Mentorship Policy Collection ---
      match /mentorshipPolicy/{policyId} {
        // Anyone can read policy (not sensitive)
        allow read: if true;
        // Only authenticated users can write policy (will be filtered by app logic)
        allow write: if isAuthenticated();
      }

      // --- Mentorship Overrides Collection ---
      match /mentorshipOverrides/{memberId} {
        // Allow authenticated users to read/write overrides (will be filtered by app logic)
        allow read, write: if isAuthenticated();
      }

      // --- Member Metrics Collection ---
      match /memberMetrics/{memberId} {
        // Anyone can read metrics (for eligibility display)
        allow read: if true;
        // Allow authenticated users to write metrics (will be filtered by app logic)
        allow write: if isAuthenticated();
      }

      // --- Mentorship Pairs Collection ---
      match /mentorshipPairs/{pairId} {
        // Allow read/write for club members
        allow read, write: if isAuthenticated();

        // --- Mentorship Notes Collection ---
        match /notes/{noteId} {
          // Allow authenticated users to create notes
          allow create: if isAuthenticated();
          
          // Allow read based on note visibility and user role
          allow read: if isAuthenticated() && (
            // Creator can always read
            resource.data.createdByUid == getUserId() ||
            // Admins can read all notes
            isAdmin() ||
            // Check visibility permissions (simplified for now - full logic in app)
            resource.data.visibility in ['both', 'mentor', 'mentee', 'officers']
          );
          
          // Allow update/delete by creator or admin
          allow update, delete: if isAuthenticated() && (
            resource.data.createdByUid == getUserId() || 
            isAdmin()
          );
        }
      }
    }
  }
}